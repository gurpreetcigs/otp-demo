
<h1>Demo Controller</h1>
<input type="text" name="phone" id="phone"/>
<svg class="progress-icon" width="20" height="20" viewBox="0 0 32 32" xmlns="http://www.w3.org/2000/svg">
				    <g class="tick-icon" stroke-width="2" stroke="#14D790" fill="none" transform="translate(1, 1.2)">
				        <path id="tick-outline-path" d="M14 28c7.732 0 14-6.268 14-14S21.732 0 14 0 0 6.268 0 14s6.268 14 14 14z" opacity="0" />
				        <path id="tick-path" d="M6.173 16.252l5.722 4.228 9.22-12.69" opacity="0"/>
				    </g>
				</svg> 
<button type="button" id="get_otp">Get</button>
<br>


<p id="message_check"></p>
 

<html lang="en" class=""><head><script src="//static.codepen.io/assets/editor/live/console_runner-ce3034e6bde3912cc25f83cccb7caa2b0f976196f2f2d52303a462c826d54a73.js"></script><script src="//static.codepen.io/assets/editor/live/css_reload-2a5c7ad0fe826f66e054c6020c99c1e1c63210256b6ba07eb41d7a4cb0d0adab.js"></script><meta charset="UTF-8"><meta name="robots" content="noindex"><link rel="shortcut icon" type="image/x-icon" href="//static.codepen.io/assets/favicon/favicon-8ea04875e70c4b0bb41da869e81236e54394d63638a1ef12fa558a4a835f1164.ico"><link rel="mask-icon" type="" href="//static.codepen.io/assets/favicon/logo-pin-f2d2b6d2c61838f7e76325261b7195c27224080bc099486ddd6dccb469b8e8e6.svg" color="#111"><link rel="canonical" href="https://codepen.io/nirarazi/pen/ZGovQo">
<link href="https://fonts.googleapis.com/css?family=Lato&amp;subset=latin,latin-ext" rel="stylesheet" type="text/css">
<link rel="stylesheet" href="//maxcdn.bootstrapcdn.com/bootstrap/3.3.4/css/bootstrap.min.css">
<script
  src="https://code.jquery.com/jquery-3.3.1.js" ></script>
  <script src="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/js/bootstrap.min.js"></script>
<style class="cp-pen-styles">
.modal-body{
	padding: 0px;
}

#wrapper {
  font-family: Lato;
  font-size: 1.5rem;
  text-align: center;
  box-sizing: border-box;
  color: #333;
}
#wrapper #dialog {
  border: solid 1px #ccc;
  padding: 20px 30px;
  display: inline-block;
  box-shadow: 0 0 4px #ccc;
  background-color: #FAF8F8;
  overflow: hidden;
  position: relative;
}
#wrapper #dialog h3 {
  margin: 0 0 10px;
  padding: 0;
  line-height: 1.25;
}
#wrapper #dialog span {
  font-size: 90%;
}
#wrapper #dialog #form {
  max-width: 240px;
  margin: 25px auto 0;
}
#wrapper #dialog #form input {
  margin: 0 5px;
  text-align: center;
  line-height: 80px;
  font-size: 50px;
  border: solid 1px #ccc;
  box-shadow: 0 0 5px #ccc inset;
  outline: none;
  width: 20%;
  transition: all 0.2s ease-in-out;
  border-radius: 3px;
}
#wrapper #dialog #form input:focus {
  border-color: purple;
  box-shadow: 0 0 5px purple inset;
}
#wrapper #dialog #form input::-moz-selection {
  background: transparent;
}
#wrapper #dialog #form input::selection {
  background: transparent;
}
#wrapper #dialog #form button {
  margin: 30px 0 50px;
  width: 100%;
  padding: 6px;
  background-color: #B85FC6;
  border: none;
  text-transform: uppercase;
}
#wrapper #dialog button.close {
  border: solid 2px;
  border-radius: 30px;
  line-height: 19px;
  font-size: 120%;
  width: 22px;
  position: absolute;
  right: 5px;
  top: 5px;
}
#wrapper #dialog div {
  position: relative;
  z-index: 1;
}
#wrapper #dialog img {
  position: absolute;
  bottom: -70px;
  right: -63px;
}
</style></head><body>
  <!-- <button type="button" class="btn btn-info btn-lg" data-toggle="modal" data-target="#myModal">Open Modal</button> -->
<div class="modal fade" id="myModal" role="dialog">
    <div class="modal-dialog">
    
      <!-- Modal content-->
      <div class="modal-content">
        
        <div class="modal-body">
         	<div id="wrapper">
			  <div id="dialog">
			    <button class="close" data-dismiss="modal">Ã—</button>
			    <h3>Please enter the 4-digit verification code we sent via SMS:</h3>
			    <span>(we want to make sure it's you before we contact our movers)</span>
			    <div id="form">
			      <input type="text" class="otp_num"  maxLength="1" size="1" min="0" max="9" pattern="[0-9]{1}" name="otp[]"/><input type="text"  class="otp_num" maxLength="1" size="1" min="0" max="9" pattern="[0-9]{1}" name="otp[]"/><input type="text"  class="otp_num" maxLength="1" size="1" min="0" max="9" pattern="[0-9]{1}" name="otp[]"/>
			      <input type="text"  class="otp_num" maxLength="1" size="1" min="0" max="9" pattern="[0-9]{1}" name="otp[]"/>
			      <input type="hidden" name="otp_response_id" id="message_id" />
			      <div>
			      
				</div>
			      <button class="btn btn-primary btn-embossed"> Verify</button>
			    </div>
			    
			    <div>
			      Didn't receive the code?<br />
			      <a href="#">Send code again</a><br />
			    </div>
			  </div>
			</div>
        </div>
      </div>
      
    </div>
</div>



 <script
  src="https://cdnjs.cloudflare.com/ajax/libs/axios/0.18.0/axios.js"></script>
<script>

$(document).ready(function(){
	$('#get_otp').click(function(){
		let phone = $('#phone').val();
		const data = {
			phone: phone 
		};
		axios.post('{{ base_url() }}/index.php/get-otp', data).then(function(response){
			console.log(response)
			if(response.data.type == "success"){
				$('#myModal').find('#message_id').val(response.data.message);
				$('#myModal').modal('show');
			}
		}).catch(function(error){
			alert(error);
		})
	});

	/* $('#check_otp').click(function(){
		let phone = $('#phone').val();
		let otp = $('#otp').val();
		let otp_response_id = $('#myModal').find('#message_id').val();
		const data = {
			phone_num: phone,
			otp_num: otp,
			otp_response_id: otp_response_id
		};
		axios.post('{{ base_url() }}/index.php/verify-otp', data).then(function(response){
			console.log(response)
			if(response.data.type == "success"){
				$('#message_check').val(response.data.message);
			}
		}).catch(function(error){
			alert(error);
		})
	}); */
	
})
</script>
<script>
$(function() {
  'use strict';

  var body = $('body').find('#myModal');

  function goToNextInput(e) {
    var key = e.which,
      t = $(e.target),
      sib = t.next('input');

    if (key != 9 && (key < 48 || key > 57)) {
      e.preventDefault();
      return false;
    }

    if (key === 9) {
      return true;
    }

    if (!sib || !sib.length) {
      sib = body.find('input').eq(0);
    }
    sib.select().focus();
  }

  function onKeyDown(e) {
    var key = e.which;

    if (key === 9 || (key >= 48 && key <= 57)) {
      return true;
    }

    e.preventDefault();
    return false;
  }
  
  function onFocus(e) {
    $(e.target).select();
  }

  body.on('keyup', 'input', goToNextInput);
  body.on('keydown', 'input', onKeyDown);
  body.on('click', 'input', onFocus);

})
</script>
<script src="https://unpkg.com/popmotion/dist/popmotion.global.min.js"></script>
<script>
$(document).ready(function(){
	$('.btn-embossed').click(function(){
		let otp= "";
		$('.otp_num').each(function(){
			otp += $(this).val();
		});
		let phone = $('#phone').val();
		let otp_response_id = $('#myModal').find('#message_id').val();
		const data = {
			phone_num: phone,
			otp_num: otp,
			otp_response_id: otp_response_id
		};
		axios.post('{{ base_url() }}/index.php/verify-otp', data).then(function(response){
			console.log(response)
			if(response.data.type == "success"){
				$('#message_check').val(response.data.message);
				$('#myModal').modal('hide');
				init()

			}
		}).catch(function(error){
			alert(error);
		})
		
	});
});
const { tween, physics, styler, easing, value } = window.popmotion;

function init() {
  const circleStyler = styler(document.getElementById('tick-outline-path'));
  const tickStyler = styler(document.getElementById('tick-path'));
  
  function showTick() {
    // Complete outline
    tween({
      from: circleStyler.get('pathLength'),
      to: 100
    }).start(circleStyler.set('pathLength'));
    
    tween().start((v) => tickStyler.set({
      opacity: v,
      pathLength: v * 100
    }));
  }
  
  tween({ ease: easing.easeIn }).start({
    update: (v) => circleStyler.set({
      opacity: v,
      pathLength: v * 45
    }),
    complete: () => physics({ velocity: -400 })
      .start(circleStyler.set('rotate'))
  });
  
  // Emulate data received after delay
  setTimeout(showTick, 2000);
}

if (document.readyState !== 'loading') {
  // init();
} else {
  // document.addEventListener('DOMContentLoaded', init);
}

</script>
</body></html>